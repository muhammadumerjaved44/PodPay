version: '3.0'

services:

  mypod-app:
    build: .
    container_name: mypod-app
    restart: unless-stopped
    tty: true
    stdin_open: true
    volumes:
      - .:/code
    depends_on:
      - mypod-db
      - mypod-app-mmigration
      - mypod-app-migration
    networks:
      - postgres
    command: "python manage.py runserver 0.0.0.0:${POD_DOCKER_PORT}"
    ports:
      - "${POD_LOCAL_PORT}:${POD_DOCKER_PORT}"


  mypod-app-mmigration:
    build: .
    container_name: mypod-app-mmigration
    restart: on-failure
    tty: true
    stdin_open: true
    volumes:
      - .:/code
    depends_on:
      - mypod-db
    networks:
      - postgres
    command: >
        /bin/sh -c "python manage.py makemigrations"

  mypod-app-migration:
    build: .
    container_name: mypod-app-migration
    restart: on-failure
    tty: true
    stdin_open: true
    volumes:
      - .:/code
    depends_on:
      - mypod-db
      - mypod-app-mmigration
    networks:
      - postgres
    command: >
        /bin/sh -c "python manage.py migrate"

  # mypod-db:
  #   image: postgres:latest
  #   restart: always
  #   container_name: mypod-db
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}"
  #   networks:
  #     - postgres


  # mypod-adminer:
  #   image: adminer
  #   container_name: mypod-adminer
  #   restart: always
  #   ports:
  #     - 3000:8080
  #   networks:
  #     - postgres

  # mypod-pgadmin:
  #   container_name: mypod-pgadmin
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #     PGDATA: /data/postgres
  #   volumes:
  #      - pgadmin:/var/lib/pgadmin
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   networks:
  #     - postgres
  #   restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
    pgadmin:
    postgres:
